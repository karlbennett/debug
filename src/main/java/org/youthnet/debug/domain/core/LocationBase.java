package org.youthnet.debug.domain.core;
// Generated 14-Dec-2009 11:46:32 by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.Fetch;
import org.youthnet.debug.domain.core.enums.LocationTypes;
import org.youthnet.debug.domain.core.enums.PublicContactDetailsSource;
import org.youthnet.debug.domain.core.lookups.GeographicalArea;

import javax.persistence.*;

/**
 * LocationBase generated by hbm2java
 */
@Entity
@Table(name = "Locations")
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(discriminatorType = DiscriminatorType.STRING,
        length = 50,
        name = "Discriminator")
@DiscriminatorValue(value = "LocationBase")
public class LocationBase extends GenericDTO implements java.io.Serializable {


private String DisplayString;
private Opportunity owner;
private LocationTypes locationType;
private ContactDetails contactDetails;
private ContactDetails publicContactDetails;
private boolean UseCustomOrgName;
private String CustomOrgName;
private PublicContactDetailsSource publicContactDetailsSource;
private Set<GeographicalArea> geographicalAreas = new HashSet<GeographicalArea>(0);
private boolean IsActive;

    public LocationBase() {
    }

    public LocationBase(String DisplayString, Opportunity owner, LocationTypes locationType, ContactDetails contactDetails, ContactDetails publicContactDetails, boolean UseCustomOrgName, String CustomOrgName, PublicContactDetailsSource publicContactDetailsSource, Set<GeographicalArea> geographicalAreas, boolean IsActive) {
       this.DisplayString = DisplayString;
       this.owner = owner;
       this.locationType = locationType;
       this.contactDetails = contactDetails;
       this.publicContactDetails = publicContactDetails;
       this.UseCustomOrgName = UseCustomOrgName;
       this.CustomOrgName = CustomOrgName;
       this.publicContactDetailsSource = publicContactDetailsSource;
       this.geographicalAreas = geographicalAreas;
       this.IsActive = IsActive;
    }
   
    @Column(length = 50)
    public String getDisplayString() {
        return this.DisplayString;
    }

    public void setDisplayString(String DisplayString) {
        this.DisplayString = DisplayString;
    }

    @ManyToOne(targetEntity = org.youthnet.debug.domain.core.Opportunity.class,
            fetch = FetchType.EAGER)
    @Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
    @JoinColumn(name = "OpportunityLocationId", columnDefinition = "raw(16)")
    @javax.xml.bind.annotation.XmlTransient
    public Opportunity getOwner() {
        return this.owner;
    }

    public void setOwner(Opportunity owner) {
        this.owner = owner;
    }

    @Column(name = "LocationType", columnDefinition = "varchar2(30 char)")
    @Enumerated(EnumType.STRING)
    public LocationTypes getLocationType() {
        return this.locationType;
    }

    public void setLocationType(LocationTypes locationType) {
        this.locationType = locationType;
    }

    @ManyToOne(targetEntity = org.youthnet.debug.domain.core.ContactDetails.class,
            cascade = CascadeType.ALL,
            fetch = FetchType.EAGER)
    @JoinColumn(name = "ContactDetailsId", columnDefinition = "raw(16)")
    public ContactDetails getContactDetails() {
        return this.contactDetails;
    }

    public void setContactDetails(ContactDetails contactDetails) {
        this.contactDetails = contactDetails;
    }

    @ManyToOne(targetEntity = org.youthnet.debug.domain.core.ContactDetails.class,
            cascade = CascadeType.ALL,
            fetch = FetchType.EAGER)
    @JoinColumn(name = "PublicContactDetailsId", columnDefinition = "raw(16)")
    public ContactDetails getPublicContactDetails() {
        return this.publicContactDetails;
    }

    public void setPublicContactDetails(ContactDetails publicContactDetails) {
        this.publicContactDetails = publicContactDetails;
    }

    @Column
    public boolean isUseCustomOrgName() {
        return this.UseCustomOrgName;
    }

    public void setUseCustomOrgName(boolean UseCustomOrgName) {
        this.UseCustomOrgName = UseCustomOrgName;
    }

    @Column
    public String getCustomOrgName() {
        return this.CustomOrgName;
    }

    public void setCustomOrgName(String CustomOrgName) {
        this.CustomOrgName = CustomOrgName;
    }

    @Column(name = "PublicContactDetailsSource", columnDefinition = "varchar2(36 char)")
    @Enumerated(EnumType.STRING)
    public PublicContactDetailsSource getPublicContactDetailsSource() {
        return this.publicContactDetailsSource;
    }

    public void setPublicContactDetailsSource(PublicContactDetailsSource publicContactDetailsSource) {
        this.publicContactDetailsSource = publicContactDetailsSource;
    }

    @ManyToMany(targetEntity = org.youthnet.debug.domain.core.lookups.GeographicalArea.class, fetch = FetchType.EAGER)
    @Fetch( value = org.hibernate.annotations.FetchMode.SELECT)
    @JoinTable(name = "LocationAddressLookups",
        joinColumns = @JoinColumn(name = "LocationAddressId", columnDefinition = "raw(16)"),
        inverseJoinColumns = @JoinColumn(name = "LookupId", columnDefinition = "raw(16)"))
    public Set<GeographicalArea> getGeographicalAreas() {
        return this.geographicalAreas;
    }

    public void setGeographicalAreas(Set<GeographicalArea> geographicalAreas) {
        this.geographicalAreas = geographicalAreas;
    }

    @Column
    public boolean isIsActive() {
        return this.IsActive;
    }

    public void setIsActive(boolean IsActive) {
        this.IsActive = IsActive;
    }




}


